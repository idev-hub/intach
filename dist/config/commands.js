"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const bot_1 = __importDefault(require("../services/bot"));
const vk_io_1 = require("vk-io");
const SubscribeNews_1 = __importDefault(require("../models/SubscribeNews"));
const random_1 = require("../utils/random");
const Luxon_1 = __importDefault(require("../classes/Luxon"));
const Timetable_1 = require("../classes/Timetable");
const getAttachmentDayWeek_1 = require("../utils/getAttachmentDayWeek");
bot_1.default.command("ok", ["ok", "–æ–∫"], (context) => __awaiter(void 0, void 0, void 0, function* () {
    if (context.session.peer)
        context.session.peer = undefined;
}));
bot_1.default.command("start", ["–Ω–∞—á–∞—Ç—å", "start"], (context) => {
    return context.scene.enter("start-scene");
});
bot_1.default.command('today', ["—Å–µ–≥–æ–¥–Ω—è", "today"], (context) => __awaiter(void 0, void 0, void 0, function* () {
    yield context.setActivity();
    let table = new Timetable_1.Timetable(context.session.peer.param);
    const date = new Luxon_1.default();
    return context.send({
        message: yield table.getTableTemplate(date),
        attachment: getAttachmentDayWeek_1.getAttachmentDayWeek(date.week()),
        keyboard: vk_io_1.Keyboard.builder()
            .textButton({
            label: "–ó–∞–≤—Ç—Ä–∞",
            payload: {
                command: "tomorrow"
            },
            color: vk_io_1.Keyboard.POSITIVE_COLOR
        }).textButton({
            label: "–ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞",
            payload: {
                command: "after-tomorrow"
            },
            color: vk_io_1.Keyboard.NEGATIVE_COLOR
        })
            .inline()
    });
}));
bot_1.default.command('tomorrow', ["–∑–∞–≤—Ç—Ä–∞", "tomorrow"], (context) => __awaiter(void 0, void 0, void 0, function* () {
    yield context.setActivity();
    const date = new Luxon_1.default().add(24);
    let table = new Timetable_1.Timetable(context.session.peer.param);
    return context.send({
        message: yield table.getTableTemplate(date),
        attachment: getAttachmentDayWeek_1.getAttachmentDayWeek(date.week()),
        keyboard: vk_io_1.Keyboard.builder()
            .textButton({
            label: "–°–µ–≥–æ–¥–Ω—è",
            payload: {
                command: "today"
            },
            color: vk_io_1.Keyboard.PRIMARY_COLOR
        }).textButton({
            label: "–ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞",
            payload: {
                command: "after-tomorrow"
            },
            color: vk_io_1.Keyboard.NEGATIVE_COLOR
        })
            .inline()
    });
}));
bot_1.default.command('after-tomorrow', ["–ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞", "after-tomorrow"], (context) => __awaiter(void 0, void 0, void 0, function* () {
    yield context.setActivity();
    let table = new Timetable_1.Timetable(context.session.peer.param);
    const date = new Luxon_1.default().add(48);
    return context.send({
        message: yield table.getTableTemplate(date),
        attachment: getAttachmentDayWeek_1.getAttachmentDayWeek(date.week()),
        keyboard: vk_io_1.Keyboard.builder()
            .textButton({
            label: "–°–µ–≥–æ–¥–Ω—è",
            payload: {
                command: "today"
            },
            color: vk_io_1.Keyboard.PRIMARY_COLOR
        }).textButton({
            label: "–ó–∞–≤—Ç—Ä–∞",
            payload: {
                command: "tomorrow"
            },
            color: vk_io_1.Keyboard.POSITIVE_COLOR
        })
            .inline()
    });
}));
bot_1.default.command('week', ["–ù–∞ –Ω–µ–¥–µ–ª—é", "week"], (context) => __awaiter(void 0, void 0, void 0, function* () {
    yield context.setActivity();
    let table = new Timetable_1.Timetable(context.session.peer.param);
    let time = 0;
    for (let i = 0; i < 7; i++) {
        const date = new Luxon_1.default().add(time);
        if (date.week() !== 7) {
            const data = yield table.getTable(date);
            if (data.count > 0) {
                let template = Timetable_1.setTemplate(data);
                template += `üìÖ ${date.pin()}, ${context.session.peer.param.toUpperCase()}`;
                yield context.send({
                    message: template,
                    attachment: getAttachmentDayWeek_1.getAttachmentDayWeek(date.week()),
                });
            }
        }
        time += 24;
    }
    return context.send("‚≠ï –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å ‚≠ï");
}));
bot_1.default.command('subscribe-news', ["–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏"], (context) => __awaiter(void 0, void 0, void 0, function* () {
    if (context.session.peer.subscribe)
        context.session.peer.subscribe.param = true;
    const subscribe = yield SubscribeNews_1.default.findOne({ where: { peerId: context.peerId } });
    if (subscribe) {
        yield subscribe.update({ param: true });
    }
    else {
        yield SubscribeNews_1.default.create({ peerId: context.peerId, param: true });
    }
    return context.reply("–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏ –±–æ—Ç–∞.");
}));
bot_1.default.command('unsubscribe-news', ["–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π"], (context) => __awaiter(void 0, void 0, void 0, function* () {
    if (context.session.peer.subscribe)
        context.session.peer.subscribe.param = false;
    const subscribe = yield SubscribeNews_1.default.findOne({ where: { peerId: context.peerId } });
    if (subscribe) {
        yield subscribe.update({ param: false });
    }
    else {
        yield SubscribeNews_1.default.create({ peerId: context.peerId, param: false });
    }
    return context.reply("–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π –±–æ—Ç–∞.");
}));
bot_1.default.command('call', ["–í—ã–∑–≤–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é"], (context) => __awaiter(void 0, void 0, void 0, function* () {
    const admins = yield bot_1.default.api.groups.getMembers({
        group_id: process.env.GROUP_ID,
        filter: "managers"
    });
    yield bot_1.default.api.messages.send({
        user_ids: admins.items.map(i => i["id"]),
        random_id: random_1.randomInt(0, 31),
        message: `@id${context.peerId} - –≤—ã–∑–≤–∞–ª –∞–¥–º–∏–Ω–∞.`,
        keyboard: vk_io_1.Keyboard.builder().urlButton({
            label: "–û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç",
            url: `https://vk.com/gim${process.env.GROUP_ID}?sel=${context.peerId}`
        }).inline()
    });
    return context.reply({
        message: "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–ø–µ—à–∏—Ç –Ω–∞ –ø–æ–º–æ—â—å!\n" +
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–∂–∏–¥–∞–π—Ç–µ"
    });
}));
bot_1.default.command('other', ["–¥—Ä—É–≥–æ–µ", "other"], (context) => {
    return context.send({
        message: `–î—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:

üìå –ù—É–∂–Ω–∞ —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É?
–ù–∞–∂–º–∏—Ç–µ "–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É" –∏ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è —Å—Ç–∞—Ç—å—è —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –±–æ—Ç–∞, –µ–≥–æ –∫–æ–º–∞–Ω–¥ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π. –í —Å–ø—Ä–∞–≤–∫–µ —Ç–∞–∫ –∂–µ —Å–æ–¥–µ—Ä–∂–∞—Ç—Å—è –æ—Ç–≤–µ—Ç—ã –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã.

üÜò –í–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã? –ò–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ö–æ—Ä–æ—à—É—é –∏–¥–µ—é –¥–ª—è –±–æ—Ç–∞? 
–ù–∞–∂–º–∏—Ç–µ "–í—ã–∑–≤–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é" –∏ –º—ã –í–∞–º –æ—Ç–≤–µ—Ç–∏–º.

üÜò –û—à–∏–±–ª–∏—Å—å –ø—Ä–∏ –≤–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö? –•–æ—Ç–∏—Ç–µ —Å–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É
–ù–∞–∂–º–∏—Ç–µ "–°–±—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ".

${context.session.peer.subscribe.param
            ? `üöÄ –ë–æ–ª—å—à–µ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –±—ã—Ç—å –≤–∫—É—Ä—Å–µ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –±–æ—Ç–∞?
–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π".`
            : `üöÄ –•–æ—Ç–∏—Ç–µ –±—ã—Ç—å –≤–∫—É—Ä—Å–µ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –±–æ—Ç–∞?
–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏" –∏ —É–∑–Ω–∞–≤–∞–π—Ç–µ –ø–µ—Ä–≤—ã–º–∏ –æ –Ω–æ–≤–æ—Å—Ç—è—Ö –≥—Ä—É–ø–ø—ã –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö –±–æ—Ç–∞.`}`,
        keyboard: vk_io_1.Keyboard.builder().textButton({
            label: "–í—ã–∑–≤–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é",
            color: vk_io_1.Keyboard.NEGATIVE_COLOR,
            payload: {
                command: "call"
            }
        }).row().textButton({
            label: context.session.peer.subscribe.param ? "–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π" : "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏",
            color: context.session.peer.subscribe.param ? vk_io_1.Keyboard.SECONDARY_COLOR : vk_io_1.Keyboard.POSITIVE_COLOR,
            payload: {
                command: context.session.peer.subscribe.param ? "unsubscribe-news" : "subscribe-news"
            }
        }).row().urlButton({
            label: "–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É",
            url: "https://vk.com/@in_teach-spravka-po-botu"
        }).row().textButton({
            label: "–°–±—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ",
            color: vk_io_1.Keyboard.NEGATIVE_COLOR,
            payload: {
                command: "start"
            }
        }).inline()
    });
});
