import bot from "../services/bot";
import {Keyboard} from "vk-io";
import SubscribeNews from "../models/SubscribeNews";
import {randomInt} from "../utils/random";
import Luxon from "../classes/Luxon";
import {setTemplate, Timetable} from "../classes/Timetable";
import {getAttachmentDayWeek} from "../utils/getAttachmentDayWeek";
import isAdmin from "../middlewares/isAdmin";

bot.command("test", ["!", "test"], async (context) => {
    const admin = await isAdmin(context)
})

/**
 * –ö–æ–º–∞–Ω–¥–∞ –ù–ê–ß–ê–¢–¨
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @beta
 **/
bot.command("start", ["–Ω–∞—á–∞—Ç—å", "start"], (context) => {
    return context.scene.enter("start-scene")
})

/**
 * –ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∑–∞ –°–ï–ì–û–î–ù–Ø.
 * @beta
 **/
bot.command('today', ["—Å–µ–≥–æ–¥–Ω—è", "today"], async (context) => {
    await context.setActivity()

    let table = new Timetable(context.session.peer.param)

    const date = new Luxon()
    return context.send({
        message: await table.getTableTemplate(date),
        attachment: getAttachmentDayWeek(date.week()),
        keyboard: Keyboard.builder()
            .textButton({
                label: "–ó–∞–≤—Ç—Ä–∞",
                payload: {
                    command: "tomorrow"
                },
                color: Keyboard.POSITIVE_COLOR
            }).textButton({
                label: "–ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞",
                payload: {
                    command: "after-tomorrow"
                },
                color: Keyboard.NEGATIVE_COLOR
            })
            .inline()
    })
})

/**
 * –ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –ó–ê–í–¢–†–ê.
 * @beta
 **/
bot.command('tomorrow', ["–∑–∞–≤—Ç—Ä–∞", "tomorrow"], async (context) => {
    await context.setActivity()
    const date = new Luxon().add(24)

    let table = new Timetable(context.session.peer.param)

    return context.send({
        message: await table.getTableTemplate(date),
        attachment: getAttachmentDayWeek(date.week()),
        keyboard: Keyboard.builder()
            .textButton({
                label: "–°–µ–≥–æ–¥–Ω—è",
                payload: {
                    command: "today"
                },
                color: Keyboard.PRIMARY_COLOR
            }).textButton({
                label: "–ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞",
                payload: {
                    command: "after-tomorrow"
                },
                color: Keyboard.NEGATIVE_COLOR
            })
            .inline()
    })
})

/**
 * –ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞.
 * @beta
 **/
bot.command('after-tomorrow', ["–ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞", "after-tomorrow"], async (context) => {
    await context.setActivity()

    let table = new Timetable(context.session.peer.param)

    const date = new Luxon().add(48)
    return context.send({
        message: await table.getTableTemplate(date),
        attachment: getAttachmentDayWeek(date.week()),
        keyboard: Keyboard.builder()
            .textButton({
                label: "–°–µ–≥–æ–¥–Ω—è",
                payload: {
                    command: "today"
                },
                color: Keyboard.PRIMARY_COLOR
            }).textButton({
                label: "–ó–∞–≤—Ç—Ä–∞",
                payload: {
                    command: "tomorrow"
                },
                color: Keyboard.POSITIVE_COLOR
            })
            .inline()
    })
})

/**
 * –ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –ù–ï–î–ï–õ–Æ.
 * @beta
 **/
bot.command('week', ["–ù–∞ –Ω–µ–¥–µ–ª—é", "week"], async (context) => {
    await context.setActivity()
    let table = new Timetable(context.session.peer.param)

    let time = 0
    for (let i = 0; i < 7; i++) {
        const date = new Luxon().add(time)

        if (date.week() !== 7) {
            const data = await table.getTable(date)
            if (data.count > 0) {

                let template = setTemplate(data)
                template += `üìÖ ${date.pin()}, ${context.session.peer.param.toUpperCase()}`

                await context.send({
                    message: template,
                    attachment: getAttachmentDayWeek(date.week()),
                })
            }
        }
        time += 24
    }

    return context.send("‚≠ï –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å ‚≠ï")
})

/**
 * –ö–æ–º–∞–Ω–¥–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏.
 * @beta
 **/
bot.command('subscribe-news', ["–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏"], async (context) => {
    if (context.session.peer.subscribe) context.session.peer.subscribe.param = true
    const subscribe = await SubscribeNews.findOne({where: {peerId: context.peerId}})
    if (subscribe) {
        await subscribe.update({param: true})
    } else {
        await SubscribeNews.create({peerId: context.peerId, param: true})
    }
    return context.reply("–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏ –±–æ—Ç–∞.")
})

/**
 * –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–ø–∏—Å–∫–∏ –æ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π.
 * @beta
 **/
bot.command('unsubscribe-news', ["–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π"], async (context) => {
    if (context.session.peer.subscribe) context.session.peer.subscribe.param = false
    const subscribe = await SubscribeNews.findOne({where: {peerId: context.peerId}})
    if (subscribe) {
        await subscribe.update({param: false})
    } else {
        await SubscribeNews.create({peerId: context.peerId, param: false})
    }
    return context.reply("–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π –±–æ—Ç–∞.")
})

/**
 * –ö–æ–º–∞–Ω–¥–∞ –≤—ã–∑–æ–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
 * @beta
 **/
bot.command('call', ["–í—ã–∑–≤–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é"], async (context) => {
    const admins = await bot.api.groups.getMembers({
        group_id: process.env.GROUP_ID,
        // @ts-ignore
        filter: "managers"
    })

    await bot.api.messages.send({
        user_ids: admins.items.map(i => i["id"]),
        random_id: randomInt(0, 31),
        message: `@id${context.peerId} - –≤—ã–∑–≤–∞–ª –∞–¥–º–∏–Ω–∞.`,
        keyboard: Keyboard.builder().urlButton({
            label: "–û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç",
            url: `https://vk.com/gim${process.env.GROUP_ID}?sel=${context.peerId}`
        }).inline()
    })

    return context.reply({
        message: "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–ø–µ—à–∏—Ç –Ω–∞ –ø–æ–º–æ—â—å!\n" +
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–∂–∏–¥–∞–π—Ç–µ"
    })
})

/**
 * –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—á–∏—Ö –∫–æ–º–∞–Ω–¥
 * @beta
 **/
bot.command('other', ["–¥—Ä—É–≥–æ–µ", "other"], (context) => {
    return context.send({
        message: `–î—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:

üìå –ù—É–∂–Ω–∞ —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É?
–ù–∞–∂–º–∏—Ç–µ "–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É" –∏ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è —Å—Ç–∞—Ç—å—è —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –±–æ—Ç–∞, –µ–≥–æ –∫–æ–º–∞–Ω–¥ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π. –í —Å–ø—Ä–∞–≤–∫–µ —Ç–∞–∫ –∂–µ —Å–æ–¥–µ—Ä–∂–∞—Ç—Å—è –æ—Ç–≤–µ—Ç—ã –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã.

üÜò –í–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã? –ò–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ö–æ—Ä–æ—à—É—é –∏–¥–µ—é –¥–ª—è –±–æ—Ç–∞? 
–ù–∞–∂–º–∏—Ç–µ "–í—ã–∑–≤–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é" –∏ –º—ã –í–∞–º –æ—Ç–≤–µ—Ç–∏–º.

üÜò –û—à–∏–±–ª–∏—Å—å –ø—Ä–∏ –≤–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö? –•–æ—Ç–∏—Ç–µ —Å–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É
–ù–∞–∂–º–∏—Ç–µ "–°–±—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ".

${context.session.peer.subscribe.param
            ? `üöÄ –ë–æ–ª—å—à–µ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –±—ã—Ç—å –≤–∫—É—Ä—Å–µ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –±–æ—Ç–∞?
–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π".`
            : `üöÄ –•–æ—Ç–∏—Ç–µ –±—ã—Ç—å –≤–∫—É—Ä—Å–µ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –±–æ—Ç–∞?
–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏" –∏ —É–∑–Ω–∞–≤–∞–π—Ç–µ –ø–µ—Ä–≤—ã–º–∏ –æ –Ω–æ–≤–æ—Å—Ç—è—Ö –≥—Ä—É–ø–ø—ã –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö –±–æ—Ç–∞.`}`,
        keyboard: Keyboard.builder().textButton({
            label: "–í—ã–∑–≤–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é",
            color: Keyboard.NEGATIVE_COLOR,
            payload: {
                command: "call"
            }
        }).row().textButton({
            label: context.session.peer.subscribe.param ? "–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π" : "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏",
            color: context.session.peer.subscribe.param ? Keyboard.SECONDARY_COLOR : Keyboard.POSITIVE_COLOR,
            payload: {
                command: context.session.peer.subscribe.param ? "unsubscribe-news" : "subscribe-news"
            }
        }).row().urlButton({
            label: "–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É",
            url: "https://vk.com/@in_teach-spravka-po-botu"
        }).row().textButton({
            label: "–°–±—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ",
            color: Keyboard.NEGATIVE_COLOR,
            payload: {
                command: "start"
            }
        }).inline()
    })
})
